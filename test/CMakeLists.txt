if(ENABLE_TESTING)
  set(TEST_REQUIRED_LIBS leanstore leanstore_bm gtest gmock)
  set(TEST_REQUIRED_HEADERS ${GTEST_INCLUDE_DIR}
                            ${CMAKE_CURRENT_SOURCE_DIR}/include)
  function(LEANSTORE_ADD_TEST TEST_NAME)
    add_executable(${ARGV})
    target_link_libraries(${TEST_NAME} PUBLIC ${TEST_REQUIRED_LIBS})
    target_include_directories(${TEST_NAME} PUBLIC ${TEST_REQUIRED_HEADERS})
    gtest_discover_tests(${TEST_NAME})
  endfunction()

  leanstore_add_test(test_hybrid_latch sync/test_latch.cc main.cc)
  leanstore_add_test(test_hybrid_guard sync/test_guard.cc main.cc)
  leanstore_add_test(test_page_guard sync/test_page_guard.cc)
  leanstore_add_test(test_aio_interface storage/test_aio.cc main.cc)
  leanstore_add_test(test_compression storage/blob/test_compression.cc main.cc)
  leanstore_add_test(test_extent_list storage/extent/test_extent_list.cc main.cc)
  leanstore_add_test(test_buffer_manager buffer/test_buffer_manager.cc)
  leanstore_add_test(test_blob_manager storage/blob/test_blob_manager.cc main.cc)
  leanstore_add_test(test_log_manager recovery/test_log_manager.cc main.cc)
  leanstore_add_test(test_group_commit recovery/test_group_commit.cc)
  leanstore_add_test(test_transaction transaction/test_transaction.cc)
  leanstore_add_test(test_b_tree_node storage/btree/test_node.cc main.cc)
  leanstore_add_test(test_b_tree_node_with_blob storage/btree/test_node_wblob.cc main.cc)
  leanstore_add_test(test_b_tree_locking storage/btree/test_locking.cc main.cc)
  leanstore_add_test(test_b_tree storage/btree/test_tree.cc)
  leanstore_add_test(test_lean_store_adapter adapters/test_leanstore_adapter.cc)
  leanstore_add_test(test_wired_tiger_adapter adapters/test_wiredtiger_adapter.cc)
  leanstore_add_test(test_filesystem_adapter adapters/test_filesystem_adapter.cc)
endif()

# ---------------------------------------------------------------------------
# Misc
# ---------------------------------------------------------------------------
add_executable(LeanStoreFUSE fuse/fuse.cc)
target_link_libraries(LeanStoreFUSE PUBLIC ${TEST_REQUIRED_LIBS})
target_include_directories(LeanStoreFUSE PUBLIC ${TEST_REQUIRED_HEADERS})